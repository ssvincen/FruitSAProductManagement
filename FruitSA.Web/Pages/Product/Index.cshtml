@page
@model FruitSA.Web.Pages.Product.IndexModel
@{
    ViewData["Title"] = "Products";
}

<div class="container">
    <h1>Products</h1>

    <div class="mb-3">
        <a asp-page-handler="DownloadExcel" class="btn btn-success" id="downloadExcelBtn">
            <span id="downloadText">Download Excel</span>
            <span id="downloadSpinner" class="spinner-border spinner-border-sm d-none" role="status">
                <span class="visually-hidden">Loading...</span>
            </span>
        </a>
        <form asp-page-handler="Upload" method="post" enctype="multipart/form-data" class="d-inline">
            <label class="btn btn-primary" id="uploadFileBtn">
                <span id="uploadText">Upload Excel</span>
                <span id="uploadSpinner" class="spinner-border spinner-border-sm d-none" role="status">
                    <span class="visually-hidden">Loading...</span>
                </span>
                <input type="file" asp-for="UploadFile" accept=".xlsx" class="d-none" id="fileInput" />
            </label>
        </form>
        <a asp-page="Create" class="btn btn-primary">Create New Product</a>
    </div>

    @if (!string.IsNullOrEmpty(Model.SuccessMessage))
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @Model.SuccessMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @Model.ErrorMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (Model.Products?.Items?.Any() == true)
    {
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Category</th>
                    <th>Product Code</th>
                    <th>Name</th>
                    <th>Price</th>
                    <th>Description</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var product in Model.Products.Items)
                {
                    <tr>
                        <td>@product.CategoryName</td>
                        <td>@product.ProductCode</td>
                        <td>@product.Name</td>
                        <td>@product.Price</td>
                        <td>@product.Description</td>
                        <td>
                            <a asp-page="Edit" asp-route-id="@product.ProductId" class="btn btn-sm btn-primary">Edit</a>
                            <a asp-page="Details" asp-route-id="@product.ProductId" class="btn btn-sm btn-info">Details</a>
                            <a asp-page="Delete" asp-route-id="@product.ProductId" class="btn btn-sm btn-danger">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <nav aria-label="Page navigation">
            <ul class="pagination">
                <li class="page-item @(Model.Products.PageNumber == 1 ? "disabled" : "")">
                    <a class="page-link" asp-page="./Index" asp-route-pageNumber="@(Model.Products.PageNumber - 1)">Previous</a>
                </li>

                @for (var i = 1; i <= Model.Products.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.Products.PageNumber ? "active" : "")">
                        <a class="page-link" asp-page="./Index" asp-route-pageNumber="@i">@i</a>
                    </li>
                }

                <li class="page-item @(Model.Products.PageNumber == Model.Products.TotalPages ? "disabled" : "")">
                    <a class="page-link" asp-page="./Index" asp-route-pageNumber="@(Model.Products.PageNumber + 1)">Next</a>
                </li>
            </ul>
        </nav>
    }
    else
    {
        <div class="alert alert-info">
            No products found.
        </div>
    }
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.getElementById('downloadExcelBtn').addEventListener('click', function () {
            var btn = this;
            var text = document.getElementById('downloadText');
            var spinner = document.getElementById('downloadSpinner');

            btn.classList.add('disabled');
            text.classList.add('d-none');
            spinner.classList.remove('d-none');

            setTimeout(function () {
                btn.classList.remove('disabled');
                text.classList.remove('d-none');
                spinner.classList.add('d-none');
            }, 1000);
        });

        document.getElementById('fileInput').addEventListener('change', function () {
            var btn = document.getElementById('uploadFileBtn');
            var text = document.getElementById('uploadText');
            var spinner = document.getElementById('uploadSpinner');

            btn.classList.add('disabled');
            text.classList.add('d-none');
            spinner.classList.remove('d-none');

            // Submit the form programmatically
            this.form.submit();

            // Reset UI after upload (approximate)
            setTimeout(function () {
                btn.classList.remove('disabled');
                text.classList.remove('d-none');
                spinner.classList.add('d-none');
            }, 1000); // Adjusted for faster feedback
        });
    </script>
}